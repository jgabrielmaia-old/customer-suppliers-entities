// <auto-generated />
using System;
using CompanySupplier.Entity.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanySupplier.Entity.Migrations
{
    [DbContext(typeof(CompanySupplierContext))]
    partial class CompanySupplierContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompanySupplier.Entity.Model.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("FantasyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FederativeUnitId")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("FederativeUnitId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CompanySupplier.Entity.Model.CompanySupplier", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("CompanyId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("CompanySuppliers");
                });

            modelBuilder.Entity("CompanySupplier.Entity.Model.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmailId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("EmailId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("CompanySupplier.Entity.ValueObjects.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("CompanySupplier.Entity.ValueObjects.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("CompanySupplier.Entity.ValueObjects.FederativeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FederativeUnit");
                });

            modelBuilder.Entity("CompanySupplier.Entity.Model.Company", b =>
                {
                    b.HasOne("CompanySupplier.Entity.ValueObjects.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("CompanySupplier.Entity.ValueObjects.FederativeUnit", "FederativeUnit")
                        .WithMany()
                        .HasForeignKey("FederativeUnitId");
                });

            modelBuilder.Entity("CompanySupplier.Entity.Model.CompanySupplier", b =>
                {
                    b.HasOne("CompanySupplier.Entity.Model.Company", "Company")
                        .WithMany("CompanySuppliers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanySupplier.Entity.Model.Supplier", "Supplier")
                        .WithMany("CompanySuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanySupplier.Entity.Model.Supplier", b =>
                {
                    b.HasOne("CompanySupplier.Entity.ValueObjects.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("CompanySupplier.Entity.ValueObjects.Email", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");
                });
#pragma warning restore 612, 618
        }
    }
}
